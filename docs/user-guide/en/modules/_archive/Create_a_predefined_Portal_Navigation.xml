<!--

    Copyright (C) 2009 eXo Platform SAS.
    
    This is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as
    published by the Free Software Foundation; either version 2.1 of
    the License, or (at your option) any later version.
    
    This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public
    License along with this software; if not, write to the Free
    Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
    02110-1301 USA, or see the FSF site: http://www.fsf.org.

-->

<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.4//EN" "http://www.oasis-open.org/docbook/sgml/4.4/docbookx.dtd">
<chapter>
<title>How to configure the portal pages</title>
<section><title>Overview</title></section>
<para>When a user logs in he sees three types of navigation tree:</para><itemizedlist><listitem>Portal Navigation</listitem><listitem>Group Navigation</listitem><listitem>User Navigation</listitem></itemizedlist><para>they all are configured thanks to the usual XML configuration syntax in a file: &quot;portal/WEB-INF/conf/portal/portal-configuration.xml&quot;</para><programlisting>  &lt;component&gt;
    &lt;key&gt;org.exoplatform.portal.config.UserPortalConfigService&lt;/key&gt;
    &lt;type&gt;org.exoplatform.portal.config.UserPortalConfigService&lt;/type&gt;
    &lt;component-plugins&gt;           
	    &lt;component-plugin&gt;
	      &lt;name&gt;new.portal.config.user.listener&lt;/name&gt;
	      &lt;set-method&gt;initListener&lt;/set-method&gt;
	      &lt;type&gt;org.exoplatform.portal.config.NewPortalConfigListener&lt;/type&gt;
	      &lt;description&gt;this listener init the portal configuration&lt;/description&gt;
	      &lt;init-params&gt;
	        &lt;value-param&gt;
	          &lt;name&gt;default.portal&lt;/name&gt;
	          &lt;description&gt;The default portal for checking db is empty or not&lt;/description&gt;
	          &lt;value&gt;classic&lt;/value&gt;
	        &lt;/value-param&gt; 
	        &lt;object-param&gt;
	          &lt;name&gt;portal.configuration&lt;/name&gt;
	          &lt;description&gt;description&lt;/description&gt;
	          &lt;object type=&quot;org.exoplatform.portal.config.NewPortalConfig&quot;&gt;
	            &lt;field  name=&quot;predefinedOwner&quot;&gt;
	              &lt;collection type=&quot;java.util.HashSet&quot;&gt;                
	                &lt;value&gt;&lt;string&gt;classic&lt;/string&gt;&lt;/value&gt;
	                &lt;value&gt;&lt;string&gt;webos&lt;/string&gt;&lt;/value&gt;
	              &lt;/collection&gt;
	            &lt;/field&gt;
	            &lt;field  name=&quot;ownerType&quot;&gt;&lt;string&gt;portal&lt;/string&gt;&lt;/field&gt;
	            &lt;field  name=&quot;templateLocation&quot;&gt;&lt;string&gt;war:/conf/portal&lt;/string&gt;&lt;/field&gt; 
	          &lt;/object&gt;
	        &lt;/object-param&gt; 
	        &lt;object-param&gt;
	          &lt;name&gt;group.configuration&lt;/name&gt;
	          &lt;description&gt;description&lt;/description&gt;
	          &lt;object type=&quot;org.exoplatform.portal.config.NewPortalConfig&quot;&gt;
	            &lt;field  name=&quot;predefinedOwner&quot;&gt;
	              &lt;collection type=&quot;java.util.HashSet&quot;&gt;            
	              	&lt;value&gt;&lt;string&gt;platform/administrators&lt;/string&gt;&lt;/value&gt;    
	              	&lt;value&gt;&lt;string&gt;platform/users&lt;/string&gt;&lt;/value&gt;
	              	&lt;value&gt;&lt;string&gt;platform/guests&lt;/string&gt;&lt;/value&gt;
	              	&lt;value&gt;&lt;string&gt;organization/management/executive-board&lt;/string&gt;&lt;/value&gt;	              
	              &lt;/collection&gt;
	            &lt;/field&gt;
	            &lt;field  name=&quot;ownerType&quot;&gt;&lt;string&gt;group&lt;/string&gt;&lt;/field&gt;
	            &lt;field  name=&quot;templateLocation&quot;&gt;&lt;string&gt;war:/conf/portal&lt;/string&gt;&lt;/field&gt; 
	          &lt;/object&gt;
	        &lt;/object-param&gt;       
	        &lt;object-param&gt;
	          &lt;name&gt;user.configuration&lt;/name&gt;
	          &lt;description&gt;description&lt;/description&gt;
	          &lt;object type=&quot;org.exoplatform.portal.config.NewPortalConfig&quot;&gt;
	            &lt;field  name=&quot;predefinedOwner&quot;&gt;
	              &lt;collection type=&quot;java.util.HashSet&quot;&gt;                
	                &lt;value&gt;&lt;string&gt;root&lt;/string&gt;&lt;/value&gt;
	                &lt;value&gt;&lt;string&gt;john&lt;/string&gt;&lt;/value&gt;
	                &lt;value&gt;&lt;string&gt;marry&lt;/string&gt;&lt;/value&gt;
	                &lt;value&gt;&lt;string&gt;demo&lt;/string&gt;&lt;/value&gt;
	              &lt;/collection&gt;
	            &lt;/field&gt;
	            &lt;field  name=&quot;ownerType&quot;&gt;&lt;string&gt;user&lt;/string&gt;&lt;/field&gt;
	            &lt;field  name=&quot;templateLocation&quot;&gt;&lt;string&gt;war:/conf/portal&lt;/string&gt;&lt;/field&gt; 
	          &lt;/object&gt;
	        &lt;/object-param&gt;
	      &lt;/init-params&gt;
	    &lt;/component-plugin&gt;
  &lt;/component-plugins&gt;  
</programlisting><para>In the previous XML file we define, for the 3 navigation types, some sets of predefined portal, groups or users that will have some XML files inside the war. Those files will be used to create an initial navigation the first time the portal is launched. That information will then be stored in the JCR and hence only modifiable from the portal UI.</para>
<section><title>Portal Navigation</title></section>
<para>The portal navigation incorporates the pages that can be accessed even when the user is not logged in (if the permission allow a public access). Several portal navigations are used for example when a company has several trademarks and each trade would have its own website.</para><para>The configuration of a portal called &quot;classic&quot; is made by providing 4 XML files under the directory portal/WEBINF/conf/portal/portal/classic:</para>
<section><title>Portal.xml</title></section>
<para>That file describes the layout and portlets that will be shown for all pages. Usually the layout contains the banner, footer, menu, breadcrumbs portlets. Indeed, in GateIn, every area is a portlet even the banner and footer which makes the platform extremely configurable.</para><programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;portal-config&gt;
  &lt;portal-name&gt;classic&lt;/portal-name&gt;
  &lt;locale&gt;en&lt;/locale&gt;
  &lt;factory-id&gt;office&lt;/factory-id&gt;
  &lt;access-permissions&gt;Everyone&lt;/access-permissions&gt;
  &lt;edit-permission&gt;*:/platform/administrators&lt;/edit-permission&gt;
  &lt;creator&gt;root&lt;/creator&gt;    
    
 	&lt;portal-layout&gt; 		
		&lt;application&gt;
	    &lt;instance-id&gt;portal#classic:/web/BannerPortlet/banner&lt;/instance-id&gt;
	    &lt;show-info-bar&gt;false&lt;/show-info-bar&gt;
	  &lt;/application&gt;
	  &lt;application&gt;
	  	&lt;instance-id&gt;portal#classic:/web/NavigationPortlet/toolbar&lt;/instance-id&gt;
	    &lt;show-info-bar&gt;false&lt;/show-info-bar&gt;
	  &lt;/application&gt;
		
	  &lt;application&gt;
	    &lt;instance-id&gt;portal#classic:/web/BreadcumbsPortlet/breadcumbs&lt;/instance-id&gt;
	    &lt;show-info-bar&gt;false&lt;/show-info-bar&gt;
	  &lt;/application&gt;
	  
	
	  &lt;page-body&gt; &lt;/page-body&gt;
	  
	  &lt;application&gt;
	    &lt;instance-id&gt;portal#classic:/web/FooterPortlet/footer&lt;/instance-id&gt;
	    &lt;show-info-bar&gt;false&lt;/show-info-bar&gt;
	  &lt;/application&gt;
  &lt;/portal-layout&gt;
  
&lt;/portal-config&gt;
</programlisting><para>Even if not shown in the previous XML file, it is also possible to apply a nested container that can also contain portlets. Containers are then responsible of the layout of their children (row, column or tabs containers exist).</para><para>Each application references a portlet using the id portal#{portalName}:/{portletWarName}/{portletName}/{uniqueId}</para><para>In order to define at which location GateIn Portal shall render the current page use the page-body tag.</para><para>The defined classic portal is accessible to &quot;Everyone&quot; (that means it can be accessed through the URL /portal/public/classic) but only members of the group /platform/administrators can edit it.</para>
<section><title>Navigation.xml</title></section>
<para>This file defines all the navigation nodes the portal will have. The syntax is simple as we get nested node tags. Each node references a page that is defined in the next XML file.</para><para>If the label #{} is used then it means the i18n mechanism is activated and that the real label to render is taken from an associated properties file for the current locale.</para><programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;node-navigation&gt;
  &lt;owner-type&gt;portal&lt;/owner-type&gt;
  &lt;owner-id&gt;classic&lt;/owner-id&gt;
  &lt;priority&gt;1&lt;/priority&gt;
  &lt;page-nodes&gt;
	  &lt;node&gt;
	    &lt;uri&gt;home&lt;/uri&gt;
	    &lt;name&gt;home&lt;/name&gt;
	    &lt;label&gt;#{portal.classic.home}&lt;/label&gt;
	    &lt;page-reference&gt;portal::classic::homepage&lt;/page-reference&gt;	    
	  &lt;/node&gt;    
	  &lt;node&gt;
	    &lt;uri&gt;webexplorer&lt;/uri&gt;
	    &lt;name&gt;webexplorer&lt;/name&gt;
	    &lt;label&gt;#{portal.classic.webexplorer}&lt;/label&gt;
	    &lt;page-reference&gt;portal::classic::webexplorer&lt;/page-reference&gt;	    
	  &lt;/node&gt;
  &lt;/page-nodes&gt;
&lt;/node-navigation&gt;
</programlisting><para>This navigation tree can have multiple views inside portlets such as the breadcrumbs that render the current view node, the site map or the menu portlets.</para>
<section><title>Pages.xml</title></section>
<para>This XML file structure is very similar to portal.xml and it can also contain container tags. Each application can decide if it wishes to render the portlet border, the window state icons or the mode.</para><programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;page-set&gt;  
  &lt;page&gt;
    &lt;page-id&gt;portal::classic::homepage&lt;/page-id&gt;
    &lt;owner-type&gt;portal&lt;/owner-type&gt;
    &lt;owner-id&gt;classic&lt;/owner-id&gt;
    &lt;name&gt;homepage&lt;/name&gt;
    &lt;title&gt;Home Page&lt;/title&gt;
    &lt;access-permissions&gt;Everyone&lt;/access-permissions&gt;
    &lt;edit-permission&gt;*:/platform/administrators&lt;/edit-permission&gt;
    &lt;application&gt;
      &lt;instance-id&gt;portal#classic:/web/HomePagePortlet/homepageportlet&lt;/instance-id&gt;
      &lt;title&gt;Home Page portlet&lt;/title&gt;
      &lt;show-info-bar&gt;false&lt;/show-info-bar&gt;
      &lt;show-application-state&gt;false&lt;/show-application-state&gt;
      &lt;show-application-mode&gt;false&lt;/show-application-mode&gt;
    &lt;/application&gt;
  &lt;/page&gt;    
    
  &lt;page&gt;
    &lt;page-id&gt;portal::classic::webexplorer&lt;/page-id&gt;
    &lt;owner-type&gt;portal&lt;/owner-type&gt;
    &lt;owner-id&gt;classic&lt;/owner-id&gt;
    &lt;name&gt;webexplorer&lt;/name&gt;
    &lt;title&gt;Web Explorer&lt;/title&gt;
    &lt;access-permissions&gt;*:/platform/users&lt;/access-permissions&gt;
    &lt;edit-permission&gt;*:/platform/administrators&lt;/edit-permission&gt;    
    &lt;application&gt;
      &lt;instance-id&gt;group#platform/users:/web/BrowserPortlet/WebExplorer&lt;/instance-id&gt;
      &lt;title&gt;Web Explorer&lt;/title&gt;
      &lt;show-info-bar&gt;false&lt;/show-info-bar&gt;
    &lt;/application&gt;  
  &lt;/page&gt;  
&lt;/page-set&gt;
</programlisting>
<section><title>Portlet-preferences.xml</title></section>
<para>Porlet instances can be associated with portlet-preferences that override the one defined in the usual portlet.xml file of the portlet application WAR.</para><programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;portlet-preferences-set&gt;
  &lt;portlet-preferences&gt;
    &lt;owner-type&gt;portal&lt;/owner-type&gt;
    &lt;owner-id&gt;classic&lt;/owner-id&gt;
    &lt;window-id&gt;portal#classic:/web/BannerPortlet/banner&lt;/window-id&gt;
    &lt;preference&gt;
      &lt;name&gt;template&lt;/name&gt;
      &lt;value&gt;par:/groovy/groovy/webui/component/UIBannerPortlet.gtmpl&lt;/value&gt;
      &lt;read-only&gt;false&lt;/read-only&gt;
    &lt;/preference&gt;
  &lt;/portlet-preferences&gt;
  &lt;portlet-preferences&gt;
    &lt;owner-type&gt;portal&lt;/owner-type&gt;
    &lt;owner-id&gt;classic&lt;/owner-id&gt;
    &lt;window-id&gt;portal#classic:/web/NavigationPortlet/toolbar&lt;/window-id&gt;
    &lt;preference&gt;
      &lt;name&gt;useAJAX&lt;/name&gt;
      &lt;value&gt;true&lt;/value&gt;
      &lt;read-only&gt;false&lt;/read-only&gt;
    &lt;/preference&gt;
  &lt;/portlet-preferences&gt;
  &lt;portlet-preferences&gt;
    &lt;owner-type&gt;portal&lt;/owner-type&gt;
    &lt;owner-id&gt;classic&lt;/owner-id&gt;
    &lt;window-id&gt;portal#classic:/web/FooterPortlet/footer&lt;/window-id&gt;
    &lt;preference&gt;
      &lt;name&gt;template&lt;/name&gt;
      &lt;value&gt;par:/groovy/groovy/webui/component/UIFooterPortlet.gtmpl&lt;/value&gt;
      &lt;read-only&gt;false&lt;/read-only&gt;
    &lt;/preference&gt;
  &lt;/portlet-preferences&gt;
  
  
  &lt;portlet-preferences&gt;
    &lt;owner-type&gt;portal&lt;/owner-type&gt;
    &lt;owner-id&gt;classic&lt;/owner-id&gt;
    &lt;window-id&gt;portal#classic:/web/GroovyPortlet/groovyportlet&lt;/window-id&gt;
    &lt;preference&gt;
      &lt;name&gt;template&lt;/name&gt;
      &lt;value&gt;par:/groovy/groovy/webui/component/UIGroovyPortlet.gtmpl&lt;/value&gt;
      &lt;read-only&gt;false&lt;/read-only&gt;
    &lt;/preference&gt;
  &lt;/portlet-preferences&gt;
&lt;/portlet-preferences-set&gt;
</programlisting>
<section><title>Group Navigation</title></section>
<para>Group navigations are dynamically added (mounted) to the user navigation when he logs in. This means that a user sees in his menu also all the pages that are assigned to the groups to which he belongs to.</para><para>Here only 3 XML files are necessary: navigation.xml, pages.xml and portlet-preferences.xml. The syntax is the same as for portal navigations.</para><para>The 3 files are located in the directory: &quot;portal/WEB-INF/conf/portal/group/group-name-path/&quot; like for example &quot;portal/WEB-INF/conf/portal/group/platform/administrators/&quot;</para>
<section><title>User Navigation</title></section>
<para>The user navigation is the set of nodes and pages that is owned by a user. You can see that part as the user dashboard. The files needed are navigation.xml, pages.xml, portlet-preferences.xml. You will also find gadgets.xml (formerly called widgets.xml) which defines the gadgets (widgets) that will be located in the user workspace. The user workspace is located at the left hand side, the access is restricted to some privileged users, see <link linkend="Configure+Portal+Default+Persmissions">Configure+Portal+Default+Persmissions</link>.</para><para>Those files are located in the directory &quot;portal/WEB-INF/conf/portal/users/{userName}&quot;</para><programlisting>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;widgets&gt;
  &lt;owner-type&gt;user&lt;/owner-type&gt;
  &lt;owner-id&gt;root&lt;/owner-id&gt;
	
  &lt;container id=&quot;Information&quot;&gt;
    &lt;name&gt;Information&lt;/name&gt;
    &lt;description&gt;Information's Description&lt;/description&gt;
    &lt;application&gt;
      &lt;instance-id&gt;user#root:/GateInWidgetWeb/WelcomeWidget/WelcomeWidget1&lt;/instance-id&gt;
      &lt;application-type&gt;GateInWidget&lt;/application-type&gt;
    &lt;/application&gt;
      
    &lt;application&gt;
      &lt;instance-id&gt;user#root:/GateInWidgetWeb/StickerWidget/StickerWidget&lt;/instance-id&gt;
      &lt;application-type&gt;GateInWidget&lt;/application-type&gt; 
    &lt;/application&gt;
    
    &lt;application&gt;
      &lt;instance-id&gt;user#root:/GateInWidgetWeb/InfoWidget/InfoWidget1&lt;/instance-id&gt;
      &lt;application-type&gt;GateInWidget&lt;/application-type&gt;
    &lt;/application&gt;
  &lt;/container&gt;
  
  &lt;container id=&quot;Calendar&quot;&gt;
    &lt;name&gt;Calendar&lt;/name&gt;
    &lt;description&gt;Calendar's Description&lt;/description&gt;
    &lt;application&gt;
      &lt;instance-id&gt;user#root:/GateInWidgetWeb/CalendarWidget/CalendarWidget&lt;/instance-id&gt;
      &lt;application-type&gt;GateInWidget&lt;/application-type&gt; 
    &lt;/application&gt;
  &lt;/container&gt;	
	
&lt;/widgets&gt;
</programlisting><para>Note that when you develop a portal, we advise you to use the XML instead of the User Interface as XML will allow you to provide a preconfigured package to your customer. But as each time you start the server the first time, the XML files are stored in the JCR, it will be necessary to remove the database (the jcr leverages a database). During the development phase using tomcat it simply means to delete the directory: exo-tomcat/temp</para>
</chapter>