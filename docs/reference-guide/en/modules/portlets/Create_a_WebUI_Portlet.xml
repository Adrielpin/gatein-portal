<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../../Reference_Guide.ent">
%BOOK_ENTITIES;
]>
<section id="sect-Reference_Guide-Create_a_WebUI_Portlet">
	<title>Create a WebUI Portlet</title>
	<section id="sect-Reference_Guide-Create_a_WebUI_Portlet-Overview">
		<title>Overview</title>
		<important>
			<title>TODO</title>
			<para>
				Create example (This one doesn&#39;t exist anymore). Overall this chapter need to be reviewed, any taker ? :)
			</para>
		</important>
		<para>
			This example is based on the <literal>testPortlet</literal> in <filename>portal/trunk/portlet/test</filename>.
		</para>
	</section>
	
	<section id="sect-Reference_Guide-Create_a_WebUI_Portlet-Configure_the_portlet">
		<title>Configure the portlet</title>
		<section id="sect-Reference_Guide-Configure_the_portlet-Folder_tree">
			<title>Folder tree</title>
			<para>
				On Eclipse (or any IDE), create a new Java Project, and create this folder tree :
			</para>
			
<programlisting>src
 | main
 | |- java
 | |- resources
 | |- webapp
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-pom.xml">
			<title>pom.xml</title>
			<para>
				Create the pom.xml, at root level of the project, like this :
			</para>
			
<programlisting role="XML">&#60;project&#62;
  &#60;parent&#62;
    &#60;groupId&#62;org.exoplatform.portal&#60;/groupId&#62;
    &#60;artifactId&#62;config&#60;/artifactId&#62;
    &#60;version&#62;trunk&#60;/version&#62;
  &#60;/parent&#62;
  &#60;modelVersion&#62;4.0.0&#60;/modelVersion&#62;
  &#60;artifactId&#62;org.gatein.example.portlet.testRomain&#60;/artifactId&#62;
  &#60;packaging&#62;war&#60;/packaging&#62;
  &#60;version&#62;1.0.0&#60;/version&#62;
  &#60;name&#62;gatein.portlets.testRomain&#60;/name&#62;
  &#60;description&#62;Romain Test Portlet&#60;/description&#62;
  &#60;dependencies&#62;
    &#60;dependency&#62;
      &#60;groupId&#62;org.exoplatform.portal&#60;/groupId&#62;
      &#60;artifactId&#62;exo.portal.webui.portal&#60;/artifactId&#62;
      &#60;version&#62;${org.exoplatform.portal.version}&#60;/version&#62;
      &#60;scope&#62;provided&#60;/scope&#62;
    &#60;/dependency&#62;
    &#60;dependency&#62;
      &#60;groupId&#62;org.exoplatform.portal&#60;/groupId&#62;
      &#60;artifactId&#62;exo.portal.webui.eXo&#60;/artifactId&#62;
      &#60;version&#62;${org.exoplatform.portal.version}&#60;/version&#62;
      &#60;scope&#62;provided&#60;/scope&#62;
    &#60;/dependency&#62;
  &#60;/dependencies&#62;
  &#60;build&#62;
    &#60;finalName&#62;testRomain&#60;/finalName&#62;
  &#60;/build&#62;
&#60;/project&#62;
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-UITestRomainPortlet.java">
			<title>UITestRomainPortlet.java</title>
			<para>
				In java/testRomain/portlet/component/, we will create the UITestRomainPortlet.java file for the portlet :
			</para>
			
<programlisting role="JAVA">package org.gatein.example.portlet.testRomain;
import org.exoplatform.webui.config.annotation.ComponentConfig;
import org.exoplatform.webui.core.lifecycle.UIApplicationLifecycle;
import org.exoplatform.webui.core.UIPortletApplication;
//this part is configuration of the portlet, we set the path to the template groovy.
 @ComponentConfig(
    lifecycle = UIApplicationLifecycle.class,
    template = &#34;app:/groovy/testRomain/portlet/UITestRomainPortlet.gtmpl&#34;
  )
public class UITestRomainPortlet extends UIPortletApplication {
 
  public UITestRomainPortlet() throws Exception {   
  }
}
</programlisting>
		</section>
		
		<!--   
	<section id="sect-Reference_Guide-Create_a_WebUI_Portlet-testRomain.xml">
		<title>testRomain.xml</title>
		<para>
			In src/main/resources/tomcat/, create a testRomain.xml file :
           <programlisting><![CDATA[<Context path="/test" docBase="../../../GateInProjects/portal/trunk/portlet/testPortletRomain/src/main/webapp" debug="0" reloadable="true" />]]></programlisting>
		</para>
		<para>
			docBase must be set to webapp path of the portlet when you are in the tomcat bin directory.
		</para>
	</section>
	   -->
		<section id="sect-Reference_Guide-Configure_the_portlet-Portlet_Groovy_Template">
			<title>Portlet Groovy Template</title>
			<para>
				In src/main/webapp, create the groovy template for the portlet. The path to this file must match the path you set in the java file, in our case : groovy/testRomain/portlet/UITestRomainPortlet.gtmpl
			</para>
			
<programlisting role="HTML">&#60;div id=&#34;&#60;%=uicomponent.getId();%&#62;&#34;&#62;
	HelloWorld
&#60;/div&#62;
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-Skin_Folder">
			<title>Skin Folder</title>
			<para>
				Create the folder skin in src/main/webapp. We don&#39;t fill it now, but in this folder, you can put css stylesheet and images.
			</para>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-Locale_Folder">
			<title>Locale Folder</title>
			<para>
				Create the folder WEB-INF/classes/locale in src/main/webapp. We don&#39;t fill it now, but in this folder, you can put language properties files. See <xref linkend="sect-Reference_Guide-Internationalization_Configuration" />.
			</para>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-configuration.xml">
			<title>configuration.xml</title>
			<para>
				Create the file configuration.xml in WEB-INF/conf/portlet/testPortletRomain/. Content of tag &#60;ui-component-root&#62; must match your package organization.
			</para>
			
<programlisting role="XML">&#60;webui-configuration&#62;   
  &#60;application&#62;     
    &#60;ui-component-root&#62;testRomain.portlet.component.UITestRomainPortlet&#60;/ui-component-root&#62;
    &#60;state-manager&#62;org.exoplatform.webui.application.portlet.ParentAppStateManager&#60;/state-manager&#62;
  &#60;/application&#62;
&#60;/webui-configuration&#62;
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-portlet.xml">
			<title>portlet.xml</title>
			<para>
				In WEB-INF, create file portlet.xml :
			</para>
			
<programlisting role="XML">&#60;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&#62;
&#60;portlet-app version=&#34;1.0&#34; xmlns=&#34;http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd&#34;
             xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;
             xsi:schemaLocation=&#34;http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd&#34;&#62; 
  &#60;portlet&#62;
    &#60;description xml:lang=&#34;EN&#34;&#62;Test Portlet Romain&#60;/description&#62;
    &#60;portlet-name&#62;TestRomain&#60;/portlet-name&#62;
    &#60;display-name xml:lang=&#34;EN&#34;&#62;Test Portlet Romain&#60;/display-name&#62;
    &#60;portlet-class&#62;org.exoplatform.webui.application.portlet.PortletApplicationController&#60;/portlet-class&#62;
    &#60;init-param&#62;
      &#60;name&#62;webui.configuration&#60;/name&#62;
      &#60;!-- must match the path to configuration file --&#62;
      &#60;value&#62;/WEB-INF/conf/portlet/testPortletRomain/configuration.xml&#60;/value&#62;
    &#60;/init-param&#62;    
    &#60;expiration-cache&#62;0&#60;/expiration-cache&#62;
    &#60;supports&#62;
      &#60;mime-type&#62;text/html&#60;/mime-type&#62;
      &#60;portlet-mode&#62;help&#60;/portlet-mode&#62;
    &#60;/supports&#62;
    &#60;supported-locale&#62;en&#60;/supported-locale&#62;
    &#60;resource-bundle&#62;locale.testRomainPortlet&#60;/resource-bundle&#62;     
    &#60;portlet-info&#62;
      &#60;title&#62;TestPortletRomain&#60;/title&#62;
      &#60;short-title&#62;TestPortlet&#60;/short-title&#62;
      &#60;keywords&#62;test&#60;/keywords&#62;
    &#60;/portlet-info&#62;     
  &#60;/portlet&#62;
&#60;/portlet-app&#62;
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Configure_the_portlet-web.xml">
			<title>web.xml</title>
			<para>
				In WEB-INF, create file web.xml :
			</para>
			
<programlisting role="XML">&#60;?xml version=&#34;1.0&#34; encoding=&#34;ISO-8859-1&#34;?&#62;
&#60;!DOCTYPE web-app PUBLIC &#34;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&#34; &#34;http://java.sun.com/dtd/web-app_2_3.dtd&#34;&#62;
&#60;web-app&#62; 
  &#60;!-If define the Portlet Application name MUST end with .par-&#62; 
  &#60;display-name&#62;test&#60;/display-name&#62;
  &#60;description&#62; This application is a portlet. It can not be used outside a portal. 
  This web.xml file is mandatory in each .par archive file. &#60;/description&#62;
  &#60;listener&#62; 
    &#60;listener-class&#62;org.exoplatform.services.portletcontainer.impl.servlet.PortletApplicationListener&#60;/listener-class&#62;
  &#60;/listener&#62;
  &#60;servlet&#62;
    &#60;servlet-name&#62;PortletWrapper&#60;/servlet-name&#62;
	&#60;servlet-class&#62;org.exoplatform.services.portletcontainer.impl.servlet.ServletWrapper&#60;/servlet-class&#62;
  &#60;/servlet&#62;
  &#60;servlet-mapping&#62;
    &#60;servlet-name&#62;PortletWrapper&#60;/servlet-name&#62;
	&#60;url-pattern&#62;/PortletWrapper&#60;/url-pattern&#62;
  &#60;/servlet-mapping&#62;
&#60;/web-app&#62;
</programlisting>
		</section>

	</section>
	
	<section id="sect-Reference_Guide-Create_a_WebUI_Portlet-Use_the_Portlet">
		<title>Use the Portlet</title>
		<para>
			Compile your portlet, deploy it, and add it to the portal.
		</para>
		<para>
			Now, we will add a button in the portlet. This button will open a popup with a message inside.
		</para>
		<section id="sect-Reference_Guide-Use_the_Portlet-Add_a_button">
			<title>Add a button</title>
			<para>
				In the groovy template, add this code :
			</para>
			
<programlisting role="HTML">&#60;div class=&#34;UIAction&#34;&#62; 
  &#60;div class=&#34;ActionContainer&#34;&#62;
    &#60;div class=&#34;ActionButton&#34;&#62; 
      &#60;div class=&#34;LightBlueStyle&#34;&#62;
        &#60;div class=&#34;ButtonLeft&#34;&#62;
          &#60;div class=&#34;ButtonRight&#34;&#62;
            &#60;div class=&#34;ButtonMiddle&#34;&#62;
              &#60;a href=&#34;&#60;%=uicomponent.event(&#34;OpenPopup&#34;, &#34;&#34;)%&#62;&#34;&#62;Open Popup&#60;/a&#62;
            &#60;/div&#62;
          &#60;/div&#62;
        &#60;/div&#62;
      &#60;/div&#62;
    &#60;/div&#62;
  &#60;/div&#62; 
&#60;/div&#62;
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Use_the_Portlet-Add_a_listener">
			<title>Add a listener</title>
			<para>
				In the java file, in @ComponentConfig, add this code :
			</para>
			
<programlisting role="JAVA">events = {
	@EventConfig(listeners = UITestRomainPortlet.OpenPopupActionListener.class)
}
</programlisting>
			<para>
				Remark : XXXActionLister.class XXX must match the name you set for the event in the groovy.
			</para>
			
<programlisting role="JAVA">static public class OpenPopupActionListener extends EventListener&#60;UITestRomainPortlet&#62; {
    public void execute(Event&#60;UITestRomainPortlet&#62; event) throws Exception {
        System.out.println(&#34;HelloWorld&#34;);
    }
}
</programlisting>
		</section>
		
		<section id="sect-Reference_Guide-Use_the_Portlet-Redeploy">
			<title>Redeploy</title>
			<para>
				Redeploy the portlet and click on the button. You will see &#34;HelloWorld&#34; in your console. If you don&#39;t change in the portlet, try to redeploy and reboot the tomcat server.
			</para>
		</section>

	</section>
	
	<section id="sect-Reference_Guide-Create_a_WebUI_Portlet-Add_a_HelloWorld_popup">
		<title>Add a &#34;HelloWorld&#34; popup</title>
		<para>
			Now, we will add a popup which say &#34;HelloWorld&#34; when you click on the button.
		</para>
		<para>
			First, create the groovy template of the popup : in webapp/groovy/testRomain/portlet, create UIHelloWorldPopupContent.gtmpl :
		</para>
		
<programlisting role="HTML">&#60;div id=&#34;&#60;%=uicomponent.getId();%&#62;&#34;&#62;
	HelloWorld in a popup
&#60;/div&#62;
</programlisting>
		<para>
			In java/testRomain/portlet/component, create the java file for the popup look like : {code} package testRomain.portlet.component;
		</para>
		
<programlisting role="JAVA">package testRomain.portlet.component;
import org.exoplatform.webui.config.annotation.ComponentConfig;
import org.exoplatform.webui.core.UIComponent;
import org.exoplatform.webui.core.lifecycle.UIApplicationLifecycle;

@ComponentConfig(
   lifecycle = UIApplicationLifecycle.class,
   template = &#34;app:/groovy/testRomain/portlet/UIHelloWorldPopupContent.gtmpl&#34;
  )
public class UIHelloWorldPopupContent extends UIComponent {

  public UIHelloWorldPopupContent() throws Exception {
  }

}
</programlisting>
		<para>
			In UITestRomainPortlet.java, we will create the popup at the portlet creation (in the constructor) :
		</para>
		
<programlisting role="JAVA">public UITestRomainPortlet() throws Exception {
  UIPopupWindow popup = addChild(UIPopupWindow.class, null, null);
  popup.setWindowSize(400, 300);
  
  UIHelloWorldPopupContent popupContent = createUIComponent(UIHelloWorldPopupContent.class, null, null);
  popup.setUIComponent(popupContent);
  popup.setRendered(false);
</programlisting>
		<para>
			At the beginning, we set the popup not visible. As you see, we add a children to the Portlet. So, if we want to see the content of it, we must add this in UITestPortletRomain.gtmpl :
		</para>
		
<programlisting>&#60;% uicomponent.renderChildren(); %&#62;
</programlisting>
		<para>
			This makes the portlet generate the content of all child components.
		</para>
		<para>
			Change the treatment of the event, replace the println by :
		</para>
		
<programlisting role="JAVA">public static class OpenPopupActionListener extends EventListener&#60;UITestRomainPortlet&#62; {
  public void execute(Event&#60;UITestRomainPortlet&#62; event) throws Exception {
    UITestRomainPortlet portlet = event.getSource();
    UIPopupWindow popup = portlet.getChild(UIPopupWindow.class);
    popup.setRendered(true);
    popup.setShow(true);
  }
}
</programlisting>
		<para>
			When user clicks on the button, the popup is shown.
		</para>
		<para>
			Redeploy the portlet and click on the button. You will see &#34;HelloWorld in a popup&#34; in a popup. If you don&#39;t change in the portlet, try to redeploy and reboot the tomcat server.
		</para>
	</section>

</section>


