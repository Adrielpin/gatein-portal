<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<section id="sect-Reference_Guide-Portal_Navigation_Configuration">
   <title>Portal Navigation Configuration</title>
   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Overview">
      <title>Overview</title>
      <para>
         When a user logs in he sees three types of navigation tree:
      </para>
      <itemizedlist>
         <listitem>
            <para>
               Portal Navigation
				</para>
         </listitem>
         <listitem>
            <para>
               Group Navigation
				</para>
         </listitem>
         <listitem>
            <para>
               User Navigation
				</para>
         </listitem>
      </itemizedlist>
      <para>
         they all are configured thanks to the usual XML
         configuration syntax in a
         file:
         "02portal.war:/WEB-INF/conf/portal/portal-configuration.xml"
      </para>

      <programlisting role="XML"><![CDATA[<component>
  <key>org.exoplatform.portal.config.UserPortalConfigService</key>
  <type>org.exoplatform.portal.config.UserPortalConfigService</type>
  <component-plugins>           
   <component-plugin>
     <name>new.portal.config.user.listener</name>
     <set-method>initListener</set-method>
     <type>org.exoplatform.portal.config.NewPortalConfigListener</type>
     <description>this listener init the portal configuration</description>
     <init-params>
       <value-param>
         <name>default.portal</name>
         <description>The default portal for checking db is empty or not</description>
         <value>classic</value>
       </value-param> 
       <object-param>
         <name>portal.configuration</name>
         <description>description</description>
         <object type="org.exoplatform.portal.config.NewPortalConfig">
           <field  name="predefinedOwner">
             <collection type="java.util.HashSet">                
               <value><string>classic</string></value>
               <value><string>webos</string></value>
             </collection>
           </field>
           <field  name="ownerType"><string>portal</string></field>
           <field  name="templateLocation"><string>war:/conf/portal</string></field> 
         </object>
       </object-param> 
       <object-param>
         <name>group.configuration</name>
         <description>description</description>
         <object type="org.exoplatform.portal.config.NewPortalConfig">
           <field  name="predefinedOwner">
             <collection type="java.util.HashSet">            
              <value><string>platform/administrators</string></value>    
              <value><string>platform/users</string></value>
              <value><string>platform/guests</string></value>
              <value><string>organization/management/executive-board</string></value>               
             </collection>
           </field>
           <field  name="ownerType"><string>group</string></field>
           <field  name="templateLocation"><string>war:/conf/portal</string></field> 
         </object>
       </object-param>       
       <object-param>
         <name>user.configuration</name>
         <description>description</description>
         <object type="org.exoplatform.portal.config.NewPortalConfig">
           <field  name="predefinedOwner">
             <collection type="java.util.HashSet">                
               <value><string>root</string></value>
               <value><string>john</string></value>
               <value><string>mary</string></value>
               <value><string>demo</string></value>
             </collection>
           </field>
           <field  name="ownerType"><string>user</string></field>
           <field  name="templateLocation"><string>war:/conf/portal</string></field> 
         </object>
       </object-param>
     </init-params>
   </component-plugin>
</component-plugins>]]></programlisting>
      <para>
         In the previous XML file we define, for the 3 navigation
         types, some
         sets of predefined portal, groups or users that will
         have some
         XML files inside the war. Those files will be used to
         create an
         initial navigation the first time the portal is
         launched. That
         information will then be stored in the JCR and
         hence only
         modifiable from the portal UI.
		</para>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Portal_Navigation">
      <title>Portal Navigation</title>
      <para>
         The portal navigation incorporates the pages that can be
         accessed even
         when the user is not logged in (if the permission
         allow a
         public access). Several portal navigations are used for
         example
         when a company has several trademarks and each trade
         would have
         its own website.
		</para>
      <para>
         The configuration of a portal called "classic" is made by
         providing 4
         XML files under the directory
         portal/WEBINF/conf/portal/portal/classic:
		</para>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Portal.xml">
      <title>Portal.xml</title>
      <para>
         That file describes the layout and portlets that will be
         shown for all
         pages. Usually the layout contains the banner,
         footer, menu,
         breadcrumbs portlets. Indeed, in GateIn, every
         area is a
         portlet even the banner and footer which makes the
         platform
         extremely configurable.
		</para>
      <programlisting role="XML"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<portal-config>
  <portal-name>classic</portal-name>
  <locale>en</locale>
  <factory-id>office</factory-id>
  <access-permissions>Everyone</access-permissions>
  <edit-permission>*:/platform/administrators</edit-permission>
  <creator>root</creator>    
    
  <portal-layout>   
  <application>
     <instance-id>portal#classic:/web/BannerPortlet/banner</instance-id>
     <show-info-bar>false</show-info-bar>
   </application>
   <application>
    <instance-id>portal#classic:/web/NavigationPortlet/toolbar</instance-id>
     <show-info-bar>false</show-info-bar>
   </application>
  
   <application>
     <instance-id>portal#classic:/web/BreadcumbsPortlet/breadcumbs</instance-id>
     <show-info-bar>false</show-info-bar>
   </application>
   
 
   <page-body> </page-body>
   
   <application>
     <instance-id>portal#classic:/web/FooterPortlet/footer</instance-id>
     <show-info-bar>false</show-info-bar>
   </application>
  </portal-layout>
  
</portal-config>]]></programlisting>
      <para>
         Even if not shown in the previous XML file, it is also
         possible to apply
         a nested container that can also contain
         portlets. Containers
         are then responsible of the layout of their
         children (row,
         column or tabs containers exist).
		</para>
      <para>
         Each application references a portlet using the id
         portal#{portalName}:/{portletWarName}/{portletName}/{uniqueId}
      </para>
      <para>
         In order to define at which location GateIn Portal shall
         render the
         current page use the page-body tag.
		</para>
      <para>
         The defined classic portal is accessible to "Everyone" (that
         means it
         can be accessed through the URL /portal/public/classic)
         but
         only members of the group /platform/administrators can edit
         it.
      </para>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Navigation.xml">
      <title>Navigation.xml</title>
      <para>
         This file defines all the navigation nodes the portal will
         have. The
         syntax is simple as we get nested node tags. Each node
         references a page that is defined in the next XML file.
		</para>
      <para>
         If the label #{} is used then it means the i18n mechanism is
         activated
         and that the real label to render is taken from an
         associated
         properties file for the current locale.
		</para>

      <programlisting role="XML"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<node-navigation>
  <owner-type>portal</owner-type>
  <owner-id>classic</owner-id>
  <priority>1</priority>
  <page-nodes>
   <node>
     <uri>home</uri>
     <name>home</name>
     <label>#{portal.classic.home}</label>
     <page-reference>portal::classic::homepage</page-reference>     
   </node>    
   <node>
     <uri>webexplorer</uri>
     <name>webexplorer</name>
     <label>#{portal.classic.webexplorer}</label>
     <page-reference>portal::classic::webexplorer</page-reference>     
   </node>
  </page-nodes>
</node-navigation>]]></programlisting>
      <para>
         This navigation tree can have multiple views inside portlets
         such as the
         breadcrumbs that render the current view node, the
         site map or
         the menu portlets.
		</para>
      <warning>
          <para>
         For top nodes, the
         <emphasis role="bold">uri</emphasis>
         and the
         <emphasis role="bold">name</emphasis>
         of your navigation nodes must have the
         <emphasis role="bold">same</emphasis>
         value. For the other nodes the uri is composed like
         <emphasis>
            <uri>contentmanagement/fileexplorer</uri>
         </emphasis>
         where 'contentmanagement' is the name of the parent node and
         'fileexplorer' the name of the node (
         <emphasis>&lt;name&gt;fileexplorer&lt;/name&gt; </emphasis>
         ).
         </para>
      </warning>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Pages.xml">
      <title>Pages.xml</title>
      <para>
         This XML file structure is very similar to portal.xml and it
         can also
         contain container tags. Each application can decide if
         it
         wishes to render the portlet border, the window state icons
         or
         the mode.
		</para>

      <programlisting role="XML"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<page-set>  
  <page>
    <page-id>portal::classic::homepage</page-id>
    <owner-type>portal</owner-type>
    <owner-id>classic</owner-id>
    <name>homepage</name>
    <title>Home Page</title>
    <access-permissions>Everyone</access-permissions>
    <edit-permission>*:/platform/administrators</edit-permission>
    <application>
      <instance-id>portal#classic:/web/HomePagePortlet/homepageportlet</instance-id>
      <title>Home Page portlet</title>
      <show-info-bar>false</show-info-bar>
      <show-application-state>false</show-application-state>
      <show-application-mode>false</show-application-mode>
    </application>
  </page>    
    
  <page>
    <page-id>portal::classic::webexplorer</page-id>
    <owner-type>portal</owner-type>
    <owner-id>classic</owner-id>
    <name>webexplorer</name>
    <title>Web Explorer</title>
    <access-permissions>*:/platform/users</access-permissions>
    <edit-permission>*:/platform/administrators</edit-permission>    
    <application>
      <instance-id>group#platform/users:/web/BrowserPortlet/WebExplorer</instance-id>
      <title>Web Explorer</title>
      <show-info-bar>false</show-info-bar>
    </application>  
  </page>  
</page-set>]]></programlisting>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Portlet_preferences.xml">
      <title>Portlet-preferences.xml</title>
      <para>
         Porlet instances can be associated with portlet-preferences
         that override
         the one defined in the usual portlet.xml file of
         the portlet
         application WAR.
		</para>

      <programlisting role="XML"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<portlet-preferences-set>
  <portlet-preferences>
    <owner-type>portal</owner-type>
    <owner-id>classic</owner-id>
    <window-id>portal#classic:/web/BannerPortlet/banner</window-id>
    <preference>
      <name>template</name>
      <value>par:/groovy/groovy/webui/component/UIBannerPortlet.gtmpl</value>
      <read-only>false</read-only>
    </preference>
  </portlet-preferences>
  <portlet-preferences>
    <owner-type>portal</owner-type>
    <owner-id>classic</owner-id>
    <window-id>portal#classic:/web/NavigationPortlet/toolbar</window-id>
    <preference>
      <name>useAJAX</name>
      <value>true</value>
      <read-only>false</read-only>
    </preference>
  </portlet-preferences>
  <portlet-preferences>
    <owner-type>portal</owner-type>
    <owner-id>classic</owner-id>
    <window-id>portal#classic:/web/FooterPortlet/footer</window-id>
    <preference>
      <name>template</name>
      <value>par:/groovy/groovy/webui/component/UIFooterPortlet.gtmpl</value>
      <read-only>false</read-only>
    </preference>
  </portlet-preferences>
  
  
  <portlet-preferences>
    <owner-type>portal</owner-type>
    <owner-id>classic</owner-id>
    <window-id>portal#classic:/web/GroovyPortlet/groovyportlet</window-id>
    <preference>
      <name>template</name>
      <value>par:/groovy/groovy/webui/component/UIGroovyPortlet.gtmpl</value>
      <read-only>false</read-only>
    </preference>
  </portlet-preferences>
</portlet-preferences-set>]]></programlisting>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-Group_Navigation">
      <title>Group Navigation</title>
      <para>
         Group navigations are dynamically added (mounted) to the
         user navigation
         when he logs in. This means that a user sees in
         his menu also
         all the pages that are assigned to the groups to
         which he
         belongs to.
		</para>
      <para>
         Here only 3 XML files are necessary: navigation.xml,
         pages.xml and
         portlet-preferences.xml. The syntax is the same as
         for portal
         navigations.
		</para>
      <para>
         The 3 files are located in the directory:
         "portal/WEB-INF/conf/portal/group/group-name-path/" like for
         example
         "portal/WEB-INF/conf/portal/group/platform/administrators/"
      </para>
   </section>

   <section
      id="sect-Reference_Guide-Portal_Navigation_Configuration-User_Navigation">
      <title>User Navigation</title>
      <para>
         The user navigation is the set of nodes and pages that is owned
         by a user. You can see that part as the user dashboard. The
         files needed are navigation.xml, pages.xml,
         portlet-preferences.xml. You will also find gadgets.xml
         (formerly called widgets.xml) which defines the gadgets
         (widgets) that will be located in the user workspace. The user
         workspace is located at the left hand side, the access is
         restricted to some privileged users, see
         <xref linkend="sect-Reference_Guide-Predefined_User_Configuration" />
      </para>
      <para>
         Those files are located in the directory
         "portal/WEB-INF/conf/portal/users/{userName}"
		</para>

      <programlisting role="XML"><![CDATA[<?xml version="1.0" encoding="ISO-8859-1"?>
<widgets>
  <owner-type>user</owner-type>
  <owner-id>root</owner-id>
 
  <container id="Information">
    <name>Information</name>
    <description>Information's Description</description>
    <application>
      <instance-id>user#root:/GateInWidgetWeb/WelcomeWidget/WelcomeWidget1</instance-id>
      <application-type>GateInWidget</application-type>
    </application>
      
    <application>
      <instance-id>user#root:/GateInWidgetWeb/StickerWidget/StickerWidget</instance-id>
      <application-type>GateInWidget</application-type> 
    </application>
    
    <application>
      <instance-id>user#root:/GateInWidgetWeb/InfoWidget/InfoWidget1</instance-id>
      <application-type>GateInWidget</application-type>
    </application>
  </container>
  
  <container id="Calendar">
    <name>Calendar</name>
    <description>Calendar's Description</description>
    <application>
      <instance-id>user#root:/GateInWidgetWeb/CalendarWidget/CalendarWidget</instance-id>
      <application-type>GateInWidget</application-type> 
    </application>
  </container> 
 
</widgets>]]></programlisting>
      <para>
         Note that when you develop a portal, we advise you to use
         the XML instead
         of the User Interface as XML will allow you to
         provide a
         preconfigured package to your customer. But as each
         time you
         start the server the first time, the XML files are
         stored in
         the JCR, it will be necessary to remove the database
         (the jcr
         leverages a database). During the development phase
         using
         tomcat it simply means to delete the directory:
         exo-tomcat/temp
      </para>
   </section>

   <section id="sect-Reference_Guide-Portal_Navigation_Configuration-Tips">
      <title>Tips</title>
      <section>
         <title>Direct External Links</title>
         <para>
            If you wish to add a link to a URL outside the portal you
            you first
            have to define a "page" which will not be used.
            Then add
            the URL to the navigation.
            pages.xml:
 </para>
         <programlisting><![CDATA[<page>
  <owner-type>portal</owner-type>
  <owner-id>website</owner-id>
  <name>documentation</name>
  <title>Documentation</title>
  <access-permissions>Everyone</access-permissions>
  <edit-permission>*:/platform/administrators</edit-permission>
</page>]]></programlisting>
         <para>
            naviguation.xml:</para>

         <programlisting><![CDATA[<node>
  <uri>http://wiki.exoplatform.com/xwiki/bin/view/Main/WebHome</uri>
  <name>documentation</name>
  <label>#{portal.classic.documentation}</label>
  <page-reference>portal::website::documentation</page-reference>
</node>]]></programlisting>

         <warning>
            <title>Direct external links were not a design goal</title>
            <para>Currently you cannot modify the URL using the portal
               interface, you
               must change it in the configuration files
               or modify the underlying
               database table.</para>
         </warning>
      </section>
   </section>
</section>


