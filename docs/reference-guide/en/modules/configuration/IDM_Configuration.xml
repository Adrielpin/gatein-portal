<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../../Reference_Guide.ent">
%BOOK_ENTITIES;
]>
<section id="sect-Reference_Guide-PicketLink_IDM_integration">
	<title>PicketLink IDM integration</title>
	<para>
		&PRODUCT; uses the PicketLink IDM component to retain necessary identity information (user, groups, memberships, etc.). While legacy interfaces are still used (org.exoplatform.services.organization) for identity management, the wrapper implementation delegates to the PicketLink IDM framework.
	</para>
	<para>
		This section doesn&#39;t provide information about PicketLink IDM and its configuration. Please refer to the appropriate project documentation (<ulink url="http://jboss.org/picketlink/IDM.html" />) for further information.
	</para>
	<note>
		<para>
			It is important to fully understand the concepts behind this framework design before changing the default configuration.
		</para>
	</note>
	<para>
		The identity model represented in &#39;<emphasis role="bold">org.exoplatform.services.organization</emphasis>&#39; interfaces and the one used in <emphasis role="bold">PicketLink IDM</emphasis> have some major differences.
	</para>
	<para>
		For example: the <emphasis role="bold">PicketLink IDM</emphasis> provides greater abstraction. It is possible for groups in the <emphasis role="bold">IDM</emphasis> framework to form memberships with many parents (which requires recursive ID translation) while the GateIn model allows only pure tree like membership structures.
	</para>
	<para>
		Additionally the GateIn <emphasis>membership</emphasis> concept needs to be translated into the IDM <emphasis>Role</emphasis> concept. Therefore <emphasis role="bold">PicketLink IDM</emphasis> model is used in a limited way. All these translations are applied by the integration layer.
	</para>
	<section id="sect-Reference_Guide-PicketLink_IDM_integration-Configuration_files">
		<title>Configuration files</title>
		<para>
			The main configuration file is <emphasis role="bold">idm-configuration</emphasis>:
		</para>
		<programlistingco>
			<areaspec>
				<area coords="5" id="area-Reference_Guide-PicketLink_IDM_integration-Configuration_files-JBossIDMServiceImpl" />
				<area coords="22" id="area-Reference_Guide-PicketLink_IDM_integration-Configuration_files-JBossIDMOrganizationServiceImpl" />
			</areaspec>
			
<programlisting role="XML">&#60;configuration xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;
               xsi:schemaLocation=&#34;http://www.exoplaform.org/xml/ns/kernel_1_0.xsd http://www.exoplaform.org/xml/ns/kernel_1_0.xsd&#34;
               xmlns=&#34;http://www.exoplaform.org/xml/ns/kernel_1_0.xsd&#34;&#62;

   &#60;component&#62;
        &#60;key&#62;org.exoplatform.services.organization.idm.PicketLinkIDMService&#60;/key&#62;
      &#60;type&#62;org.exoplatform.services.organization.idm.PicketLinkIDMServiceImpl&#60;/type&#62;
      &#60;init-params&#62;
         &#60;value-param&#62;
            &#60;name&#62;config&#60;/name&#62;
            &#60;value&#62;war:/conf/organization/idm-config.xml&#60;/value&#62;
         &#60;/value-param&#62;
         &#60;value-param&#62;
            &#60;name&#62;portalRealm&#60;/name&#62;
            &#60;value&#62;realm${container.name.suffix}&#60;/value&#62;
         &#60;/value-param&#62;
       &#60;/init-params&#62;
   &#60;/component&#62;


   &#60;component&#62;
      &#60;key&#62;org.exoplatform.services.organization.OrganizationService&#60;/key&#62;
      &#60;type&#62;org.exoplatform.services.organization.idm.PicketLinkIDMOrganizationServiceImpl&#60;/type&#62;
      &#60;init-params&#62;
      &#60;object-param&#62;
        &#60;name&#62;configuration&#60;/name&#62;
        &#60;object type="org.exoplatform.services.organization.idm.Config"&#62;
          &#60;field name="useParentIdAsGroupType"&#62;
            &#60;boolean&#62;true&#60;/boolean&#62;
          &#60;/field&#62;

          &#60;field name="forceMembershipOfMappedTypes"&#62;
            &#60;boolean&#62;true&#60;/boolean&#62;
          &#60;/field&#62;

          &#60;field name="pathSeparator"&#62;
            &#60;string&#62;.&#60;/string&#62;
          &#60;/field&#62;

          &#60;field name="rootGroupName"&#62;
            &#60;string&#62;GTN_ROOT_GROUP&#60;/string&#62;
          &#60;/field&#62;

          &#60;field name="groupTypeMappings"&#62;
            &#60;map type="java.util.HashMap"&#62;
              &#60;entry&#62;
                &#60;key&#62;&#60;string&#62;/&#60;/string&#62;&#60;/key&#62;
                &#60;value&#62;&#60;string&#62;root_type&#60;/string&#62;&#60;/value&#62;
              &#60;/entry&#62;

              &#60;!-- Sample mapping --&#62;
              &#60;!--
              &#60;entry&#62;
                &#60;key&#62;&#60;string&#62;/platform/*&#60;/string&#62;&#60;/key&#62;
                &#60;value&#62;&#60;string&#62;platform_type&#60;/string&#62;&#60;/value&#62;
              &#60;/entry&#62;
              &#60;entry&#62;
                &#60;key&#62;&#60;string&#62;/organization/*&#60;/string&#62;&#60;/key&#62;
                &#60;value&#62;&#60;string&#62;organization_type&#60;/string&#62;&#60;/value&#62;
              &#60;/entry&#62;
              --&#62;

            &#60;/map&#62;
          &#60;/field&#62;

          &#60;field name="associationMembershipType"&#62;
            &#60;string&#62;member&#60;/string&#62;
          &#60;/field&#62;

          &#60;field name="ignoreMappedMembershipType"&#62;
            &#60;boolean&#62;false&#60;/boolean&#62;
          &#60;/field&#62;
        &#60;/object&#62;
      &#60;/object-param&#62;
    &#60;/init-params&#62;


   &#60;/component&#62;

&#60;/configuration&#62;
</programlisting>
			<calloutlist>
				<callout arearefs="area-Reference_Guide-PicketLink_IDM_integration-Configuration_files-JBossIDMServiceImpl">
					<para>
						The <emphasis role="bold">org.exoplatform.services.organization.idm.PicketLinkIDMServiceImpl</emphasis> service has following options:
					</para>
					<itemizedlist>
						<listitem>
							<para>
								<emphasis role="bold">config</emphasis> - (value-param) - PicketLink IDM configuration file
							</para>
						</listitem>
						<listitem>
							<para>
								<emphasis role="bold">jndiName</emphasis> - (value-param) - in case &#39;config&#39; parameter is not
                provided this will be used to perform JNDI lookup for IdentitySessionFactory
							</para>
						</listitem>
						<listitem>
							<para>
								<emphasis role="bold">portalRealm</emphasis> - (value-param) - name of a realm that should be used to
                obtain proper IdentitySession - default is &#39;PortalRealm&#39;.
							</para>
						</listitem>
					</itemizedlist>
				</callout>
				<callout arearefs="area-Reference_Guide-PicketLink_IDM_integration-Configuration_files-JBossIDMOrganizationServiceImpl">
					<para>
						The <emphasis role="bold">org.exoplatform.services.organization.idm.PicketLinkIDMOrganizationServiceImpl</emphasis>
            key is a main entrypoint implementing <emphasis role="bold">org.exoplatform.services.organization.OrganizationService</emphasis>
            and is dependant on <emphasis role="bold">org.exoplatform.services.organization.idm.PicketLinkIDMService</emphasis>
					</para>
					<para>
						<emphasis role="bold">org.exoplatform.services.organization.idm.PicketLinkIDMOrganizationServiceImpl</emphasis>
            service has following options defined as fields of object-param type
            <emphasis role="bold">org.exoplatform.services.organization.idm.Config</emphasis>:
					</para>

          <itemizedlist>
						<listitem>
							<para>
								<emphasis role="bold">defaultGroupType</emphasis> - Name of PicketLink IDM GroupType that will be used to store groups.
                Default is &#39;GTN_GROUP_TYPE&#39;
							</para>
						</listitem>
						<listitem>
							<para>
								<emphasis role="bold">rootGroupName</emphasis> - Name of PicketLink IDM Group that will be used as a root parent.
                Default is &#39;GTN_ROOT_GROUP&#39;
							</para>
						</listitem>
            <listitem>
							<para>
								<emphasis role="bold">passwordAsAttribute</emphasis> - (default false) - Specifies if password should be stored using
                PicketLink IDM Credential object or as a plain attribute
							</para>
						</listitem>
						<listitem>
							<para>
								<emphasis role="bold">useParentIdAsGroupType</emphasis> - For all ids not mapped with type in 'groupTypeMappings'
                option use parent id path
               as a group type to store group in PicketLink IDM. The effect of setting
               this option to false and not providing any mappings under 'groupTypeMappings' option
               is that there can be only one group with a given name in whole GateIn group tree
							</para>
						</listitem>
            <listitem>
							<para>
								<emphasis role="bold">pathSeparator</emphasis> - When 'userParentIdAsGroupType is set to true this value will be used to
               replace all "/" chars in id. This is because "/" is not allowed to be
               used in group type name in PicketLink IDM
							</para>
						</listitem>
            <listitem>
							<para>
								<emphasis role="bold">associationMembershipType</emphasis> - If this option is used then each Membership created with
                MembrshipType that is equal to value specified here will be stored in PicketLink IDM as simple
               Group-User association
							</para>
						</listitem>
            <listitem>
							<para>
								<emphasis role="bold">groupTypeMappings</emphasis> - Map groups added with GateIn API as a childs of a given group ID to be stored with a given
               group type name in PicketLink IDM. If parent ID ends with "/*" then all child groups will
               have the mapped group type. Otherwise only direct (first level) children will use this type.

               This can be leveraged by LDAP setup. Given LDAP DN configured in PicketLink IDM to
               store specific group type will then store one given branch in GateIn group tree while
               all other groups will remain in DB.
							</para>
						</listitem>
            <listitem>
							<para>
								<emphasis role="bold">forceMembershipOfMappedTypes</emphasis> - Group stored in PicketLink IDM with a type mapped in 'groupTypeMappings' will
               automatically be member under mapped parent. Normally groups are linked by
               PicketLink IDM group association - such relationship won't be needed then. It can
               be set to false if all groups are added via GateIn APIs
               This option may be useful with LDAP config as it will make (if set to true) every entry
               added to LDAP (not via GateIn management UI) appear in GateIn
							</para>
						</listitem>
            <listitem>
							<para>
								<emphasis role="bold">ignoreMappedMembershipType</emphasis> - if "associationMembershipType" option is used and this option is set to true
                then Membership with MembershipType configured to be stored as PicketLink IDM association
                will not be stored as PicketLink IDM Role
							</para>
						</listitem>
					</itemizedlist>

					<para>
						Additionally <emphasis role="bold">JBossIDMOrganizationServiceImpl</emphasis> uses those defaults to perform identity management operations
					</para>
					<itemizedlist>
						<listitem>
							<para>
								GateIn User interface properties fields are persisted in JBoss Identity IDM using those attributes names: firstName, lastName, email, createdDate, lastLoginTime, organizationId, password (if password is configured to be stored as attribute)
							</para>
						</listitem>
						<listitem>
							<para>
								GateIn Group interface properties fields are persisted in JBoss Identity IDM using those attributes names: label, description
							</para>
						</listitem>
						<listitem>
							<para>
								GateIn MembershipType interface properties fields are persisted in JBoss Identity IDM using those RoleType properties: description, owner, create_date, modified_date
							</para>
						</listitem>
					</itemizedlist>
				</callout>
			</calloutlist>
		</programlistingco>
		

		<para>
			A sample <emphasis role="bold">PicketLink IDM</emphasis> configuration file is shown below. To understand all the options present in it please refer to the PicketLink IDM Reference Guide
		</para>
		
<programlisting>&#60;jboss-identity xmlns=&#34;urn:jboss:identity:idm:config:v1_0_beta&#34;
                xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34;
                xsi:schemaLocation=&#34;urn:jboss:identity:idm:config:v1_0_alpha identity-config.xsd&#34;&#62;
    &#60;realms&#62;
        &#60;realm&#62;
            &#60;id&#62;PortalRealm&#60;/id&#62;
            &#60;repository-id-ref&#62;PortalRepository&#60;/repository-id-ref&#62;
            &#60;identity-type-mappings&#62;
                &#60;user-mapping&#62;USER&#60;/user-mapping&#62;
            &#60;/identity-type-mappings&#62;
        &#60;/realm&#62;
    &#60;/realms&#62;
    &#60;repositories&#62;
        &#60;repository&#62;
            &#60;id&#62;PortalRepository&#60;/id&#62;
            &#60;class&#62;org.jboss.identity.idm.impl.repository.WrapperIdentityStoreRepository&#60;/class&#62;
            &#60;external-config/&#62;
            &#60;default-identity-store-id&#62;HibernateStore&#60;/default-identity-store-id&#62;
            &#60;default-attribute-store-id&#62;HibernateStore&#60;/default-attribute-store-id&#62;
        &#60;/repository&#62;
    &#60;/repositories&#62;
    &#60;stores&#62;
        &#60;attribute-stores/&#62;
        &#60;identity-stores&#62;
            &#60;identity-store&#62;
                &#60;id&#62;HibernateStore&#60;/id&#62;
                &#60;class&#62;org.jboss.identity.idm.impl.store.hibernate.HibernateIdentityStoreImpl&#60;/class&#62;
                &#60;external-config/&#62;
                &#60;supported-relationship-types&#62;
                    &#60;relationship-type&#62;JBOSS_IDENTITY_MEMBERSHIP&#60;/relationship-type&#62;
                    &#60;relationship-type&#62;JBOSS_IDENTITY_ROLE&#60;/relationship-type&#62;
                &#60;/supported-relationship-types&#62;
                &#60;supported-identity-object-types&#62;
                    &#60;identity-object-type&#62;
                        &#60;name&#62;USER&#60;/name&#62;
                        &#60;relationships/&#62;
                        &#60;credentials&#62;
                            &#60;credential-type&#62;PASSWORD&#60;/credential-type&#62;
                        &#60;/credentials&#62;
                        &#60;attributes/&#62;
                        &#60;options/&#62;
                    &#60;/identity-object-type&#62;
                &#60;/supported-identity-object-types&#62;
                &#60;options&#62;
                    &#60;option&#62;
                        &#60;name&#62;hibernateSessionFactoryRegistryName&#60;/name&#62;
                        &#60;value&#62;hibernateSessionFactory&#60;/value&#62;
                    &#60;/option&#62;
                    &#60;option&#62;
                        &#60;name&#62;allowNotDefinedIdentityObjectTypes&#60;/name&#62;
                        &#60;value&#62;true&#60;/value&#62;
                    &#60;/option&#62;
                    &#60;option&#62;
                        &#60;name&#62;populateRelationshipTypes&#60;/name&#62;
                        &#60;value&#62;true&#60;/value&#62;
                    &#60;/option&#62;
                    &#60;option&#62;
                        &#60;name&#62;populateIdentityObjectTypes&#60;/name&#62;
                        &#60;value&#62;true&#60;/value&#62;
                    &#60;/option&#62;
                    &#60;option&#62;
                        &#60;name&#62;allowNotDefinedAttributes&#60;/name&#62;
                        &#60;value&#62;true&#60;/value&#62;
                    &#60;/option&#62;
                    &#60;option&#62;
                        &#60;name&#62;isRealmAware&#60;/name&#62;
                        &#60;value&#62;true&#60;/value&#62;
                    &#60;/option&#62;
                &#60;/options&#62;
            &#60;/identity-store&#62;
        &#60;/identity-stores&#62;
    &#60;/stores&#62;
&#60;/jboss-identity&#62;
</programlisting>
	</section>

</section>


